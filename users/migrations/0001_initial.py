# Generated by Django 5.2.6 on 2025-09-14 12:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verification_token', models.CharField(blank=True, max_length=500, null=True)),
                ('email_verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_archived_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCompatibilityPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('preferred_age_range_min', models.IntegerField(blank=True, null=True)),
                ('preferred_age_range_max', models.IntegerField(blank=True, null=True)),
                ('preferred_gender', models.CharField(choices=[('any', 'Any'), ('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non-binary')], default='any', max_length=20)),
                ('geographic_preference', models.CharField(blank=True, max_length=200, null=True)),
                ('hobby_importance', models.IntegerField(default=5)),
                ('personality_importance', models.IntegerField(default=7)),
                ('values_importance', models.IntegerField(default=8)),
                ('lifestyle_importance', models.IntegerField(default=6)),
                ('excluded_topics', models.JSONField(blank=True, default=list)),
                ('excluded_personalities', models.JSONField(blank=True, default=list)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_archived_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_prefs', to='users.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserQuestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('age_range', models.CharField(blank=True, choices=[('18-24', '18-24'), ('25-34', '25-34'), ('35-44', '35-44'), ('45-54', '45-54'), ('55+', '55+')], max_length=10, null=True)),
                ('current_location', models.CharField(blank=True, max_length=200, null=True)),
                ('life_situations', models.JSONField(blank=True, default=list)),
                ('preferred_chat_times', models.JSONField(blank=True, default=list)),
                ('daily_routine_word', models.CharField(blank=True, max_length=50, null=True)),
                ('top_hobbies', models.JSONField(blank=True, default=list)),
                ('other_hobbies', models.TextField(blank=True, null=True)),
                ('enjoyed_media', models.JSONField(blank=True, default=list)),
                ('media_favorites', models.TextField(blank=True, null=True)),
                ('niche_interests', models.TextField(blank=True, null=True)),
                ('free_day_preference', models.CharField(blank=True, choices=[('outdoors_adventure', 'Outdoors Adventure'), ('cozy_at_home', 'Cozy at Home'), ('social_gathering', 'Social Gathering'), ('learning_new', 'Learning Something New')], max_length=20, null=True)),
                ('recent_inspiration', models.TextField(blank=True, null=True)),
                ('interested_in_learning', models.BooleanField(default=False)),
                ('outgoing_scale', models.IntegerField(blank=True, help_text='Scale 1-10', null=True)),
                ('stress_handling', models.CharField(blank=True, choices=[('talk_it_out', 'Talk it out'), ('exercise', 'Exercise'), ('watch_funny_videos', 'Watch funny videos'), ('meditate', 'Meditate'), ('other', 'Other')], max_length=20, null=True)),
                ('stress_handling_other', models.CharField(blank=True, max_length=100, null=True)),
                ('personality_words', models.CharField(blank=True, max_length=200, null=True)),
                ('conversation_style', models.CharField(blank=True, choices=[('listener', 'Listener'), ('talker', 'Talker'), ('balanced', 'Balanced')], max_length=10, null=True)),
                ('primary_motivation', models.CharField(blank=True, choices=[('personal_growth', 'Personal Growth'), ('fun_adventures', 'Fun Adventures'), ('helping_others', 'Helping Others'), ('achieving_goals', 'Achieving Goals')], max_length=20, null=True)),
                ('new_things_scale', models.IntegerField(blank=True, help_text='Scale 1-10', null=True)),
                ('important_values', models.JSONField(blank=True, default=list)),
                ('communication_preference', models.CharField(blank=True, choices=[('casual_fun', 'Casual and Fun'), ('deep_thoughtful', 'Deep and Thoughtful'), ('quick_checkins', 'Quick Check-ins'), ('structured', 'Structured')], max_length=20, null=True)),
                ('favorite_topics', models.JSONField(blank=True, default=list)),
                ('topics_to_avoid', models.JSONField(blank=True, default=list)),
                ('connection_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('as_needed', 'As Needed')], max_length=10, null=True)),
                ('serious_conversation_response', models.CharField(blank=True, choices=[('offer_support', 'Offer Support'), ('lighten_with_humor', 'Lighten with Humor'), ('change_topic', 'Change Topic')], max_length=20, null=True)),
                ('friendship_goals', models.JSONField(blank=True, default=list)),
                ('friend_preferences', models.JSONField(blank=True, default=list)),
                ('perfect_friendship_description', models.TextField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_archived_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire', to='users.userprofile')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
